package Week02W;

import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Scanner;

// public class ExceptionEx {
//     public static void main(String[] args) {
//         try{
//             // 예외가 발생될만한 코드
//             // 예외 처리 대상
//         } catch (FileNotFoundException e) {	//FileNotFoundException이 발생했다면
        
//         } catch (IOException e) { //IOException이 발생했다면
        
//         } catch (Exception e) {	//Exception이 발생했다면
        
//         } finally {	
//             ///어떤 예외가 발생하던 말던 무조건 실행
//         } 
//     }
// }

// class ExceptionEx2 {
//     public static void main(String[] args) {
//         int num = 100;
//         int result = 0;
// 이렇게 먼저 에러 발생하는지 확인하기
//          for (int i = 0; i < 10; i++) {
//             result = num / (int) (Math.random() * 10); //두 줄부터 error 확인 후 
//             System.out.println(result);
//            // try{ // error 날 것 같으면 
//            //     result = num / (int) (Math.random() * 10); 
//            //     System.out.println(result);
//           // } catch(ArithmeticException e) {   //ArithmeticException -> IllegalAcessException-> Throwable
//            //     System.out.println("===>0"); // 여기에 error하는 것
 //           // } 
//         }
//         for (int i = 0; i < 10; i++) {
//             // result = num / (int) (Math.random() * 10); //두 줄부터 error 확인 후 
//             // System.out.println(result);
//             try{ // error 날 것 같으면 
//                 result = num / (int) (Math.random() * 10); 
//                 System.out.println(result);
//             } catch(ArithmeticException e) {   //ArithmeticException -> IllegalAcessException-> Exception -> Throwable -> Object
//                 System.out.println("===>0"); // 여기에 error하는 것
//             } 
//         }
//     }
// }

// public class ExceptionEx6{
//     public static void main(String[] args) {
//         System.out.println(1);
//         System.out.println(2);

//         try{
//             System.out.println(3);
//             System.out.println(0 / 0); //이 줄만 주석처리하고 출력해보기
//             System.out.println(4);
//         } catch (Exception e) {
//             System.out.println(5);
//         }
//         System.out.println(6);
//     }
// }

// class ExceptionEx7 {
//     public static void main(String[] args) {
//         System.out.println(1);
//         System.out.println(2);
//         try{
//             System.out.println(3);
//             System.out.println(0 / 0); // error 발생해서
//             System.out.println(4);
//         } catch (ArithmeticException ae) { // 여기로 넘어옴
//             if(ae instanceof ArithmeticException)
//                 System.out.println("true");
//             System.out.println("ArithmeticException");
//         } catch (Exception ex) {
//             System.out.println("Exception");
//         }
//         System.out.println(6);
//     }
// }

// class ExceptionEx8 {
//     public static void main(String[] args) {
//         System.out.println(1);
//         System.out.println(2);
//         try{
//             System.out.println(3);
//             System.out.println(0 / 0); 
//             System.out.println(4);
//         } catch (ArithmeticException ae) {
//             ae.printStackTrace();
//             System.out.println("예외메시지 : "+ ae.getMessage());
//         }
//         System.out.println(6);
//     }
// }

// class ExceptionEx9 {
//     public static void main(String[] args) {
//         try {
//             Exception e = new Exception("고의로 발생시킴");
//             throw e; // 예외발생시킴
//         } catch (Exception e) {
//             System.out.println("예외 메시지 : "+ e.getMessage());
//             e.printStackTrace();
//         }
//         System.out.println("프로그램이 정상 종료 되었음");
//     }
// }

// class ExceptionEx10 {
//     public static void main(String[] args) {
//         // throw new Exception(); //error 밑에 처럼 변경
//         try {
//             throw new Exception();
//         } catch (Exception e) {
//             e.printStackTrace();
//         }
//     }
// }

// class ExceptionEx11 {
//     public static void main(String[] args) {
//         // throw new Exception(); //error 밑에 처럼 변경
//         try {
//             throw new RuntimeException("일부러 에러 발생");
//         } catch (Exception e) {
//             e.printStackTrace();
//         }
//     }
// }

// class ExceptoinEx12 {
//     public static void main(String[] args) throws Exception{ //7
//         method1(); //6
//     }

//     private static void method1() throws Exception{ //5
//         // try { //2
//         //     method2();
//         // } catch (Exception e) {
            
//         // }
//         method2(); //error //4 
//     }
//     private static void method2() throws Exception{  //3
//         // throw new Exception("에러 발생하는 연습하기"); //error 발생 //1
//         // try { //2
//         //     throw new Exception("에러 발생하는 연습하기"); 
//         // } catch (Exception e) {
            
//         // }
//         throw new Exception("에러 발생하는 연습하기");
//     }
// }

class ExceptionEx15 {
    public static void main(String[] args) {
        // command line에서 입력받은 값을 이름으로 갖는 파일을 생성한다
        File f = createFile(args[0]);
        System.out.println(f.getName() + "파일이 성공적으로 생성되었습니다.");
    }
    private static File createFile(String fileName) {
        try {
            if(fileName == null || fileName.equals(""))
                throw new Exception("파일이름이 유효하지 않습니다.");
        } catch (Exception e) {
            // fileName이 부적절한 경우, 파일 이름을 '제목없음.txt'로 한다.
            fileName = "제목없음.txt";
        } finally {
            File f = new File(fileName); // File클래스의 객체를 만든다.
            createNewFile(f); // 생성된 객체를 이용해서 파일을 생성한다.
            return f;
        }
    } // createFile메서드의 끝
    static void createNewFile(File f) {
        try {
            f.createNewFile(); // 파일을 생성한다.
        } catch (Exception e) { }
    }
}

class ExceptionEx16 {
    public static void main(String[] args) {
        PrintWriter out = null;
        // try {
        //     out = new PrintWriter(new FileWriter("제목없음3.txt"));
        //     out.println("이게 뭐지 설마 파일에 들어가나?"); // 실행 후 제목없음3.txt로 가보기(깨져서 나온다)
        // } catch (Exception e) {
        //     e.printStackTrace();
        // } finally {
        //     if( out != null)
        //         out.close();
        // } 
        PrintWriter out = null;
        try (FileWriter f = new FileWriter("Outfile.txt"));
        PrintWriter out1 = new PrintWriter(f)) {
            out = out1;
            out = new PrintWriter(new FileWriter("제목없음3.txt"));
            out.println("이게 뭐지 설마 파일에 들어가나?"); // 실행 후 제목없음3.txt로 가보기(깨져서 나온다)
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if( out != null)
                out.close();
        } 
    }
}

class MyException extends Exception {
    private final int ERR_CODE;

    MyException(String msg, int errCode) {
        super(msg);
        ERR_CODE = errCode;
    }
    MyException(String msg) {
        this(msg, 100);
    }
    public int getErrCode() {
        return ERR_CODE;
    }
}

// class Ex8{
//     public static void main(String[] args) {
//         int answer = (int)(Math.random()*100)*1;
//         int input =0;
//         int cnt=0;
//         do{
//             cnt++;
//             System.out.println("입력하세요");
//             input = new Scanner(System.in).nextInt();
//             if(answer>input){
//                 System.out.println("더 큰수 입력");
//             } else if (answer<input){
//                 System.out.println("더 작은수 입력");
//             } else {
//                 System.out.println("맞춤");
//                 System.out.println("시도 횟수는 "+cnt+"번 입니다.");
//                 break;
//             }
//         } while(true);
//     }
// }
